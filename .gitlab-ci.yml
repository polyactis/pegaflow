before_script:
  - echo "before script"
  # let users can modify its own files. git object files are 444 (read-only for everyone.)
  - chmod u+w -R .git/
  - pwd

after_script:
  - echo "after script"


stages:
  - install
  - check_version
  - run_flows
  - output_pymodule_DAG
  - uninstall

install:
  stage: install
  script:
    - pip3 install --user ./

uninstall:
  stage: uninstall
  script:
    - pip3 uninstall -y pegaflow

check_version:
  stage: check_version
  script:
    - echo "Checking the installed version"
    - python3 -c "import pegaflow; print(pegaflow.version)"
  needs: [install]
  dependencies:
    - install


# test_OO_direct_run:
#   stage: run_flows
#   script:
#     - echo "Generate and run the Object-Oriented direct-run workflow ... "
#     - cd pegaflow/example/
#     - ./WordCountFiles.py -i /y/home/huangyu/script/test/python/
#       --inputSuffixList .py -l condor --direct_run -o wc.python.code.yml -C 10
#     - pegasus-status submit/wc.python.code.*
#     - cat submit/wc.python.code.*/statistics/breakdown.txt
#     - mv wc.python.code.*/merged.txt ./
#     - ls
#   artifacts:
#     name: "${CI_BUILD_ID}_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
#     expire_in: 3 mos
#     paths:
#     - pegaflow/example/merged.txt
#   allow_failure: true

test_OO:
  stage: run_flows
  script:
    - echo "Generate and run the Object-Oriented manul-run workflow ... "
    - cd pegaflow/example/
    - ./WordCountFiles.py -i /y/home/huangyu/script/test/python/
      --inputSuffixList .py -l condor -o wc.python.code.yml -C 10
    - ./submit.sh ./wc.python.code.yml condor
    - sleep 10 && pegasus-status submit/wc.python.code.*
    - ../test/pegaflow_monitor -j submit/wc.python.code.*/jobstate.log
    - pegasus-statistics -s all submit/wc.python.code.*
    - cat submit/wc.python.code.*/statistics/breakdown.txt
    - mv wc.python.code.*/merged.txt ./
    - ls
  artifacts:
    name: "${CI_BUILD_ID}_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
    expire_in: 3 mos
    paths:
    - pegaflow/example/merged.txt
  needs: [install]
  dependencies:
    - install


test_function:
  stage: run_flows
  script:
    - echo "Generate and run the function-example workflow ... "
    - cd pegaflow/example/
    - ./WCFiles_Function.py -i /y/home/huangyu/script/test/python/
      --inputSuffixList .py -l condor -o wc.python.code.yml -C 10
    - ./submit.sh ./wc.python.code.yml condor
    - sleep 10 && pegasus-status submit/wc.python.code.*
    - ../test/pegaflow_monitor -j submit/wc.python.code.*/jobstate.log
    - pegasus-statistics -s all submit/wc.python.code.*
    - cat submit/wc.python.code.*/statistics/breakdown.txt
    - mv wc.python.code.*/merged.txt ./
    - ls
  needs: [install]
  dependencies:
    - install
  artifacts:
    name: "${CI_BUILD_ID}_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
    expire_in: 3 mos
    paths:
    - pegaflow/example/merged.txt

## Does not work on the local site, because non-local (non-stage) jobs require a condor vanilla universe.
# test_local:
#   stage: run_flows
#   script:
#     - echo "Generate and run the workflow on the local site ... "
#     - cd pegaflow/example/
#     - echo "Force shell execution. No condor required."
#     - echo "pegasus.code.generator = Shell" >> pegasusrc
#     - ./WordCountFiles.py -i /y/home/huangyu/script/test/python/
#       --inputSuffixList .py -l local -o wc.python.code.yml -C 10
#     - ./submit.sh ./wc.python.code.yml local
#     - sleep 10 && pegasus-status submit/wc.python.code.*
#     - ../test/pegaflow_monitor -j submit/wc.python.code.*/jobstate.log
#     - pegasus-statistics -s all submit/wc.python.code.*
#     - cat submit/wc.python.code.*/statistics/breakdown.txt
#     - mv wc.python.code.*/merged.txt ./
#     - ls
#   artifacts:
#     name: "${CI_BUILD_ID}_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
#     expire_in: 3 mos
#     paths:
#     - pegaflow/example/merged.txt
#   allow_failure: true


clone_pymodule:
  stage: install
  script:
    - echo "Clone pymodule and compile ... "
    - git clone git@gitlab.yfish.x:horseshoe/pymodule.git
    - pushd pymodule
    #InspectAlignmentPipeline needs some compiled binaries
    - make all
  artifacts:
    name: "${CI_BUILD_ID}_${CI_BUILD_NAME}_${CI_BUILD_REF_NAME}"
    expire_in: 4 yrs
    paths:
    - pymodule

DAG_CountReadsWorkflow:
  stage: output_pymodule_DAG
  script:
    - echo "Output a CountReadsWorkflow DAG ... "
    - pushd pymodule
    - pwd
    - ./ngs/qc/CountReadsWorkflow.py -i 790-800 -o CountReads.ISQ790-800.yml
      -l condor --pymodulePath `pwd`
      --hostname pdc --dbname pmdb --schema sunset
      -u sunset_r -p yfishLabSunset --commit
  needs: [clone_pymodule, install]
  dependencies:
    - clone_pymodule


DAG_ShortRead2Alignment:
  stage: output_pymodule_DAG
  script:
    - echo "Output a ShortRead2Alignment DAG ... "
    - pushd pymodule
    - pwd
    - ./ngs/alignment/ShortRead2Alignment.py --ind_seq_id_ls 787-811
      -a 633 -o Alignment_isq_787_811_vs_633.yml -l condor
      --home_path /y/home/huangyu --pymodulePath `pwd`
      --tmpDir /y/scratch/tmp/huangyu/
      --no_of_aln_threads 8
      -z pdc --dbname pmdb --schema sunset
      -u sunset_r -p yfishLabSunset
  needs: [clone_pymodule, install]
  dependencies:
    - clone_pymodule

DAG_InspectAlignment:
  stage: output_pymodule_DAG
  script:
    - echo "Output a InspectAlignmentPipeline DAG ... "
    - pushd pymodule
    - pwd
    - ./ngs/qc/InspectAlignmentPipeline.py -a 633 -i 2112-2132 -l condor -z pdc
      --dbname pmdb --schema sunset -u sunset_r -p yfishLabSunset
      --home_path /y/home/huangyu --pymodulePath `pwd`
      --tmpDir /y/scratch/tmp/huangyu/
      -o InspectAln_2112_2132.yml
  needs: [clone_pymodule, install]
  dependencies:
    - clone_pymodule

DAG_InspectBaseQuality:
  stage: output_pymodule_DAG
  script:
    - echo "Output a InspectBaseQualityPipeline DAG ... "
    - pushd pymodule
    - pwd
    - ./ngs/qc/InspectBaseQualityPipeline.py -a 633 -i 650-850 -l condor -z pdc
      --dbname pmdb --schema sunset -u sunset_r -p yfishLabSunset
      --home_path /y/home/huangyu --pymodulePath `pwd`
      --tmpDir /y/scratch/tmp/huangyu/
      -o InspectBaseQuality_650_850.yml
  needs: [clone_pymodule, install]
  dependencies:
    - clone_pymodule

